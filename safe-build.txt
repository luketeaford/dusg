const parse = require('./parse')
const fs = require('fs').promises

const compose = (f, g) => x => f(g(x))

const stringAfter = char => x => x.slice(x.lastIndexOf(char) + 1)
const stringUntil = char => x => x.slice(0, x.indexOf(char))

const makeFilename = compose(stringUntil('.'), stringAfter('/'))

const build = async function (someFiles, aDestDir, aTemplateFn) {
  const filenames = await fs.readdir(someFiles)

  const writeHtml = async function (x) {
    const aFilePath = `${someFiles}/${x}`
    const data = await fs.readFile(aFilePath)
    const template = compose(aTemplateFn, parse)
    await fs.mkdir(`${aDestDir}`, { recursive: true })
    const filename = makeFilename(aFilePath)
    return fs.writeFile(`${aDestDir}/${filename}.html`, template(data))
  }

  const htmlFiles = filenames.map(writeHtml)

  return Promise.all(htmlFiles)
}

module.exports = build
