// const build = async function (aSourceDir, aDestDir) {
//   const firstPass = await fs.readdir(aSourceDir)
//   const sourceFiles = firstPass.filter(x => x.indexOf('.') >= 0)
//   const sourceDirs = firstPass.filter(x => x.indexOf('.') === -1)
//   return Promise.all(sourceFiles.map(async function (aFilename) {
//     const data = await fs.readFile(`${aSourceDir}/${aFilename}`)
//     await fs.mkdir(`${aDestDir}`, { recursive: true })
//     return fs.writeFile(`${aDestDir}/${aFilename}`, data)
//   }))
// }

// BETTER
// test('The build function', async t => {
//   await build('./test/data', './test-output/nested')
//     .catch(err => t.end(err))

//   fs.readFile('./test-output/nested/txt/hello-world.txt')
//     .then(async data => {
//       t.equal(data.toString().trim(), 'Hello, world!', 'copies files over sort of.')
//       fs.unlink('./test-output/nested/txt/hello-world.txt')
//       await fs.rmdir('./test-output', { recursive: true })
//         .catch(err => t.end(err))
//       t.end()
//     })
//     .catch(err => t.end(err))
// })
